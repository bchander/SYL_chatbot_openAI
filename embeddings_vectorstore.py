# Code to create embeddings of the scrapped text data and creating vector index
# This is a One time process (run the code only when you need to create index. You can use the saved index)

from langchain.vectorstores import FAISS
import faiss
import openai
import pandas as pd 
import numpy as np

from openai import OpenAI
client = OpenAI(api_key = "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")

df = pd.read_csv(r'D:\Work\Implementations\SYL chatbot\codes\OpenAI chat\processed\csv file\scraped_text_only.csv')

#embedding_model = "text-embedding-ada-002" 
embedding_model = "text-embedding-3-small"
embeddings = []

# Process each row in the DataFrame
for index, col_name in  df.iterrows():
    # Get the blog text from the 'text' column (replace 'text' with your actual column name)
    row_text = col_name['text']
    
    response = client.embeddings.create(
        model=embedding_model,
        input=[row_text]
    )
    #print(response)
    # Extract the AI output embedding as a list of floats
    #embeddings.append(response['embeddings'])
    embedding = response.data[0].embedding
    #embedding = response["data"][0]["embedding"]

    # Append the embeddings of each blog post to the list
    embeddings.append(embeddings)

# Now 'embeddings' is a list of embeddings for all the blog posts    

'''
OpenAI’s API currently does not provide a built-in functionality for similarity search using embeddings. 
The API can generate embeddings for texts, but you would need to implement the similarity search functionality yourself.

FAISS is a great choice for this purpose. It’s a library specifically designed for efficient similarity search 
of dense vectors, like the embeddings generated by OpenAI’s API.
'''

# Assuming 'embeddings' is a list of embeddings
# Assuming 'embeddings' is a list of embeddings
embeddings_array = np.array(embeddings)  # Convert list to numpy array

dimension = embeddings_array.shape[1]  # Dimension of the embeddings
index = faiss.IndexFlatL2(dimension)  # Create a FAISS index
index.add(embeddings_array)  # Add embeddings to the index

# Save the index to a file
faiss.write_index(index, r'D:\Work\Implementations\SYL chatbot\codes\OpenAI chat\vector_DB\vector_store.index')




